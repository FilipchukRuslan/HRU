@model WebApp.ViewModels.StartPageViewModel
@{
    ViewData["Title"] = "Home Page";
}

<link href="~/css/site.css" rel="stylesheet" />
<style>
    body {
        margin: 0% auto !important;
        padding: 0% !important;
        background: none;
    }

    .eo-date .eo-date__day {
        font-size: 18px;
        font-weight: 700;
    }

    .eo-date .eo-date__month {
        font-size: 11px;
        text-transform: uppercase;
    }

    .eo-date {
        display: -webkit-box;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
        background: #eee;
        text-align: center;
        width: 50px;
        height: 50px;
        color: #888;
        -webkit-box-align: center;
        -webkit-align-items: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-align-content: center;
        -ms-flex-line-pack: center;
        align-content: center;
        -ms-grid-column-align: center;
        justify-items: center;
        -webkit-box-pack: center;
        -webkit-justify-content: center;
        -ms-flex-pack: center;
        justify-content: center;
        margin-top: 4px;
    }

    .modalDialog, .modalDialog2, .modalDialog3 {
        position: fixed;
        font-family: 'Roboto', sans-serif;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: rgba(0,0,0,0.8);
        z-index: 99999;
        -webkit-transition: opacity 400ms ease-in;
        -moz-transition: opacity 400ms ease-in;
        transition: opacity 400ms ease-in;
        display: none;
        pointer-events: none;
        max-height: 100%;
        overflow-y: auto;
    }

        .modalDialog:target, .modalDialog2:target, .modalDialog3:target {
            display: block;
            pointer-events: auto;
        }

        .modalDialog > div, .modalDialog2 > div, .modalDialog3 > div {
            width: 600px;
            position: relative;
            margin: 10% auto;
            padding: 5px 20px 13px 20px;
            border-radius: 10px;
            background: #fff;
            background: -moz-linear-gradient(#fff, #999);
            background: -webkit-linear-gradient(#fff, #999);
            background: -o-linear-gradient(#fff, #999);
        }

    .close, .close2, .close3 {
        background: #ff0000;
        color: #fff;
        line-height: 25px;
        position: absolute;
        right: -12px;
        text-align: center;
        top: -10px;
        width: 24px;
        text-decoration: none;
        font-weight: bold;
        -webkit-border-radius: 12px;
        -moz-border-radius: 12px;
        border-radius: 12px;
        -moz-box-shadow: 1px 1px 3px #000;
        -webkit-box-shadow: 1px 1px 3px #000;
        box-shadow: 1px 1px 3px #000;
    }

        .close:hover, .close2:hover, .close3:hover {
            background: #00d9ff;
        }

    .section:hover {
        cursor: pointer;
        color: slategrey;
    }

    .title:hover {
        cursor: pointer;
        color: slategrey;
    }

    #preview {
        max-height: 150px;
        min-height: 150px;
        max-width: 220px;
        min-width: 220px;
    }

    #preview2 {
        max-height: 100px;
        min-height: 100px;
        max-width: 170px;
        min-width: 170px;
    }


    li {
        list-style-type: none;
    }

    .listOfNews {
        margin-bottom: 6px;
        font-size: 18px;
        font-family: 'Roboto', sans-serif;
    }

    .date {
        color: #999;
        font-size: 16px;
    }

    hr {
        margin-top: 30px;
        margin-bottom: 0%;
        border: 1.5px solid #eeeeef;
    }

    .stripe {
        width: 33%;
        height: 30px;
        background-color: rgba(41, 79, 209, 0.70);
        float: left;
        margin-right: 80px;
        margin-bottom: 30px;
        color: rgb(255, 255, 255);
        font-size: 20px;
        text-align: right;
        font-weight: 500;
        letter-spacing: 3px;
        font-family: 'Roboto', sans-serif;
    }

    .decorator {
        width: 35%;
        height: 30px;
        border-top: 30px solid rgb(41, 79, 209);
        border-right: 15px solid transparent;
    }

    .brandHeader {
        background: linear-gradient(180deg, rgb(1, 141, 255), rgb(101, 206, 255));
        height: 75px;
    }

    .brandHeader {
        background: linear-gradient(180deg, rgb(0, 0, 0), rgb(41, 42, 51));
        height: 75px;
    }

    .container-fluid {
        margin: 0% auto;
        padding: 0%;
    }

    .last-news {
        margin: 5px 0px 25px;
        font-size: 25px;
        color: #414141;
        font-weight: 300;
    }

    .newsBlock {
        margin-bottom: 23px;
        font-weight: 400;
        font-size: 18px;
    }

    .myslider {
        max-height: 590px;
        min-height: 590px;
        max-width: 1050px;
        min-width: 1050px;
    }



    .c {
        text-align: center;
    }

    img {
        background-size: cover;
    }

    .clear {
        clear: both;
    }

    .backGr {
        background-size: contain;
        background-position: 50% 50%;
    }

    .faceBook {
        background: rgb(245, 246, 247);
        border: 1px solid rgba(164, 164, 164, 0.33);
        font-size: 18px;
    }

    .profile {
        max-height: 100px;
        min-height: 100px;
        max-width: 100px;
        min-width: 100px;
        border-radius: 50px;
    }

    .icon {
        max-height: 25px;
        min-height: 25px;
        max-width: 25px;
        min-width: 25px;
    }

    .fbName {
        font-size: 18px;
        color: black;
    }

    .col {
        float: left;
        margin-right: 12px;
    }

    .blackWraping {
        position: absolute;
        left: 40px;
        bottom: 4px;
        /* width: 87%; */
        text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.4);
        line-height: 33px;
        color: #FEFEFE;
        font-size: 20px;
        font-weight: 500;
        z-index: 3;
        background: rgba(0,0,0,.5);
        padding: 10px;
        max-width: 85%;
    }

    .targets {
        float: left;
        margin-right: 20px;
        color: #034EA1;
        width: 11px;
        height: 11px;
        border: 2px solid #4d56b0;
        border-radius: 50%;
        margin: 4px;
        display: inline-block;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        cursor: pointer;
    }

    .targetsBlock {
        position: absolute;
        display: inline-block;
        left: 10px;
        bottom: 12px;
        z-index: 3;
        width: 10px;
    }

    .targets2 {
        float: left;
        margin-right: 20px;
        color: #034EA1;
        width: 11px;
        height: 11px;
        border: 2px solid #4d56b0;
        border-radius: 50%;
        margin: 4px;
        display: inline-block;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        cursor: pointer;
    }

    .targetsBlock2 {
        position: absolute;
        display: inline-block;
        left: 10px;
        bottom: 12px;
        z-index: 3;
        width: 10px;
    }

    .fixTop {
        margin-top: -19px !important;
    }

    .projImg {
        width: auto;
        height: auto;
    }

    .projImg {
        width: 340px;
        height: 240px;
        margin-bottom: 10px;
    }

    .projects {
        height: 400px;
        overflow: auto;
        font-size: 18px;
    }

    .videoBlock {
        background: rgb(245, 246, 247);
    }

    .video-el {
        margin-top: 30px;
        font-size: 18px;
    }

    .center-el {
        text-align: center;
    }

    .text-size {
        font-size: 20px;
        color: #161A1E;
        text-transform: uppercase;
        font-weight: 500;
        margin-top: 15px;
    }

    .video {
        width: 600px !important;
    }

    .slider__inner {
        position: absolute;
        top: 0;
        left: 0;
        width: 400%;
        -webkit-transition: left 0.4s;
        transition: left 0.4s;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-flow: row nowrap;
        -ms-flex-flow: row nowrap;
        flex-flow: row nowrap;
    }

    *, *:before, *:after {
        box-sizing: border-box;
    }

    html, body {
        height: 100%;
    }

    body {
        color: #444;
        font-family: 'Roboto', sans-serif;
        font-size: 1rem;
        line-height: 1.5;
    }

    .slider {
        width: 100%;
        height: 430px;
        position: relative;
        overflow: hidden;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-flow: row nowrap;
        -ms-flex-flow: row nowrap;
        flex-flow: row nowrap;
        -webkit-box-align: end;
        -webkit-align-items: flex-end;
        -ms-flex-align: end;
        align-items: flex-end;
        -webkit-box-pack: center;
        -webkit-justify-content: center;
        -ms-flex-pack: center;
        justify-content: center;
    }

    .slider__nav {
        height: 14px;
        width: 14px;
        border-radius: 50%;
        z-index: 10;
        outline: 6px solid #ccc;
        outline-offset: -6px;
        box-shadow: 0 0 0 0 #333, 0 0 0 0 rgba(51, 51, 51, 0);
        cursor: pointer;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
    }

        .slider__nav:checked {
            -webkit-animation: check 0.4s linear forwards;
            animation: check 0.4s linear forwards;
        }

            .slider__nav:checked:nth-of-type(1) ~ .slider__inner {
                left: 0%;
            }

            .slider__nav:checked:nth-of-type(2) ~ .slider__inner {
                left: -100%;
            }

            .slider__nav:checked:nth-of-type(3) ~ .slider__inner {
                left: -200%;
            }

            .slider__nav:checked:nth-of-type(4) ~ .slider__inner {
                left: -300%;
            }

    a {
        color: black;
    }

        a:hover {
            color: black;
        }
</style>
<div id="myCarousel" class="carousel slide fixTop" data-ride="carousel">

    <div class="targetsBlock">
        <div class="targets" data-target="#myCarousel" data-slide-to="0"></div>
        <div class="targets" data-target="#myCarousel" data-slide-to="1"></div>
        <div class="targets" data-target="#myCarousel" data-slide-to="2"></div>
    </div>

    <!-- Wrapper for slides -->
    <div class="carousel-inner">
        <div class="item active">
            <div class="backGr" style="background-image:url(@Model.CarouselLst[0].ImageMin);">
                <div class="c">
                    <img class="myslider" src="@Model.ImagesLst.Where(e=>e.Id==Model.CarouselLst[0].Image_Id).FirstOrDefault().ImagePath" alt="Chania">
                </div>
                <a href='@Url.Action("ShowCarousel", "Home", new { id = @Model.CarouselLst[0].Id }, null)'><p class="blackWraping">@Model.CarouselLst[0].Title</p></a>
            </div>
        </div>

        <div class="item">
            <div class="backGr" style="background-image:url(@Model.CarouselLst[1].ImageMin);">
                <div class="c">
                    <img class="myslider" src="@Model.ImagesLst.Where(e=>e.Id==Model.CarouselLst[1].Image_Id).FirstOrDefault().ImagePath" alt="Chania">
                </div>
                <a href='@Url.Action("ShowCarousel", "Home", new { id = @Model.CarouselLst[1].Id }, null)'><p class="blackWraping">@Model.CarouselLst[1].Title</p></a>
            </div>
        </div>
        <div class="item">
            <div class="backGr" style="background-image:url(@Model.CarouselLst[2].ImageMin);">
                <div class="c">
                    <img class="myslider" src="@Model.ImagesLst.Where(e=>e.Id==Model.CarouselLst[2].Image_Id).FirstOrDefault().ImagePath" alt="Chania">
                </div>
                <a href='@Url.Action("ShowCarousel", "Home", new { id = @Model.CarouselLst[2].Id }, null)'><p class="blackWraping">@Model.CarouselLst[2].Title</p></a>
            </div>
        </div>
    </div>
</div>



@if (User.IsInRole("Administrator"))
{
    <div class="container">
        <form name="uploadCarousel" method="post" enctype="multipart/form-data" asp-controller="Home" asp-action="PostCarousel">
            <div class="row">
                <div class="col-lg-3 form-group">
                    <br />
                    <br />
                    <input type='file' name="uploads" multiple onchange="readURL(this);" required/>
                    <img id="preview" src="http://www.adbazar.pk/frontend/images/default-image.jpg" alt="your image" />

                </div>
                <div class="col-lg-4 form-group">
                    <br />
                    <br />
                    <label>для фото маленького разрешения</label>
                    <input type='file' name="uploads" multiple onchange="readURL2(this);" required/>
                    <img id="preview2" src="http://www.adbazar.pk/frontend/images/default-image.jpg" alt="your image" />


                </div>


            </div>
            <br />
            <input name="Carousel" type="submit" value="Загрузить изображения" />
            <hr>

        </form>


        <div class="form-group">
            <label for="title">Заголовок</label>
            <textarea cols="30" rows="10" class="form-control text-area-text" id="title" required></textarea>
            <div></div>
        </div>

        <div class="form-group">
            <label for="text">Текст</label>
            <textarea cols="30" rows="10" class="form-control text-area-text" id="MCE" required></textarea>
            <div></div>
        </div>
        <br />

        <div class="form-group">
            <label>номер слайда</label>
            <input id="num" type="number" size="3" name="num" min="1" max="3" value="1" />
        </div>
        <br />
        <input type="submit" id="submit-btn" value="Загрузить слайд" />
    </div>
}

<hr>
<div class="stripe"> НАШИ НОВОСТИ</div>
<div class="decorator"></div>
<div class="clear"></div>
<div class="container">
    <div class="row">
        <div class="col-sm-6">
            <p class="last-news">Последние новости:</p>
            @foreach (var news in Model.NewsLst)
            {
                <br />
                <div class="row">
                    <div class="col-lg-12">
                        <a href='@Url.Action("ShowNews", "News", new { id = news.Id }, null)' class="newsBlock">@news.Title</a>
                        <p class="date">@news.Day @news.Month @news.Year</p>
                    </div>
                </div>
                <br />


            }

        </div>
        <div class="col-sm-6">
            <p class="last-news">Новости из соцсетей:</p>

            @foreach (var face in Model.FaceBookLst)
            {
                <br />
                <div class="row">
                    <div class="col-lg-12">

                        <div class="row">
                            <div class="col-lg-3">
                                <img class="profile" src="@Model.PersonsLst.Where(e => e.Id == face.Person_Id).FirstOrDefault().ProfilePhoto" />
                                @if (User.IsInRole("Administrator"))
                                {
                                    <a class="btn btn-default" href='@Url.Action("DeleteFB", "Home", new { id = @face.Id }, null)'>Удалить пост</a>
                                }
                            </div>
                            <div class="faceBook col-lg-9">
                                <div class="row">
                                    <div class="col" style="margin-top: 10px;">
                                        <img class="icon" src="http://rdsport.com.ua/wp-content/uploads/2017/01/fb-footer.png" />
                                    </div>
                                    <div class="col" style="margin-top: 10px;">
                                        <a class="fbName" href="@Model.PersonsLst.Where(e => e.Id == face.Person_Id).FirstOrDefault().ReferenceFB" target="_blank">

                                            @Model.PersonsLst.Where(e => e.Id == face.Person_Id).FirstOrDefault().Name
                                        </a>
                                    </div>
                                    <div class="col" style="margin-top: 10px;">
                                        <p style="margin-top: 1px;" class="date">
                                            @face.Date
                                        </p>
                                    </div>
                                    <div class="clear"></div>
                                    <p>@face.FBPost</p>
                                </div>


                            </div>
                        </div>
                    </div>
                </div>
                <br />

            }
            @{
                var Items = Model.PersonsLst.Select(c => new SelectListItem() { Value = c.Name, Text = c.Name }).ToList();
            }

            @if (User.IsInRole("Administrator"))
            {
                @if (!Model.PersonsLst.Any())
                {
                    <p>Чтобы добавить пост Facebook, в разделе О Союзе добавьте члена команды</p>
                    <button class="btn btn-default" disabled>Опубликовать пост FaceBook</button>
                }
                else
                {
                    <a href="#openModal2" class="btn btn-default" style="margin-top:30px;">Опубликовать пост FaceBook</a>
                    <div id="openModal2" class="modalDialog2">
                        <div>
                            <a href="#close" title="Закрыть" class="close2">X</a>
                            <form name="UploadFB" method="post" asp-controller="Home" asp-action="PostFB">

                                <div class="form-group">

                                    <select name="Person"
                                            asp-items="Items"></select>
                                    <label for="Text">Текст</label>
                                    <textarea cols="30" rows="10" class="form-control text-area-text" name="Text" required></textarea>
                                    <div></div>
                                </div>
                                <input type="submit" value="Опубликовать" />
                            </form>
                        </div>
                    </div>
                }

            }

        </div>
    </div>
</div>


<hr>
<div class="stripe">ВИДЕО</div>
<div class="decorator"></div>
<div class="clear"></div>
<div class="container">
    <div class="row videoBlock">
        <div class="slider">
            <input type="radio" name="slider" checked="checked" class="slider__nav" />
            <input type="radio" name="slider" class="slider__nav" />
            <input type="radio" name="slider" class="slider__nav" />
            <input type="radio" name="slider" class="slider__nav" />
            <div class="slider__inner">
                @for (var vid = Model.VideoLst.Count() - 1; vid > Model.VideoLst.Count() - 5; vid--)
                {
                    <div class="col-lg-12">
                        <div id="@Model.VideoLst[vid].Id" style="margin-left:40px;" class="col-sm-7 video-el">
                            @Html.Raw(@Model.VideoLst[vid].VideoFile)
                        </div>
                        <div class="col-sm-4 video-el">
                            @Model.VideoLst[vid].Text
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <p class="center-el text-size"><a asp-controller="Video" asp-action="Index">ВСЕ ВИДЕО</a></p>

</div>
<hr>
<div class="stripe">НАШИ ПРОЕКТЫ</div>
<div class="decorator"></div>
<div class="clear"></div>
<div class="container">
    <div class="row">
        <br />

        @for (var i = Model.ProjectsLst.Count() - 1; i >= Model.ProjectsLst.Count() - 3; i--)
        {
            <div class="col-lg-4 projects">
                <a href='@Url.Action("ShowArtice", "Projects", new { id = @Model.ProjectsLst[i].Id }, null)'>
                    <img class="projImg"
                         src="@Model.ImagesLst.Where(e=>e.Id==Model.ProjectsLst[i].Image_Id).FirstOrDefault().ImagePath" />
                </a>
                <a href='@Url.Action("ShowArtice", "Projects", new { id = @Model.ProjectsLst[i].Id }, null)' style="width:325px; margin-top:10px;">@Model.ProjectsLst[i].Title</a>
            </div>
        }
    </div>
</div>

@section Scripts{

    <script>
        tinymce.init({
            selector: '#MCE',
            plugins: [
                'advlist autolink list link image charmap print preview hr anchor pagebreak',
                'searchreplace wordcount visualblocks visualchars code fullscreen',
                'insertdatetime media nonbreaking save table contextmenu directionality',
                'emoticons template paste textcolor colorpicker textpattern imagetools image'
            ],
            toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image" | "image",
            toolbar2: 'print preview media | forecolor backcolor emotions | code',
            image_title: true,
            automatic_uploads: true,
            file_picker_types: 'image',
            file_picker_callback: function (cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');
                input.setAttribute('name', 'files');
                input.onchange = function () {
                    var file = this.files[0];

                    var reader = new FileReader();

                    reader.onload = function () {
                        var dataUrl = reader.result;
                        var base64 = dataUrl.split(',')[1];
                        var id = 'blobid' + (new Date()).getTime();
                        var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                        var blobInfo = blobCache.create(id, file, base64);
                        blobCache.add(blobInfo);
                        cb(blobInfo.blobUri(), { title: file.name });
                    };
                    reader.readAsDataURL(file);
                };
                input.click();
            }
        });


        $(document).ready(function () {
            $('iframe').attr('width', '600');
            $('iframe').attr('height', '350');
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#preview')
                        .attr('src', e.target.result)
                        .width(180)
                        .height(100);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
        function readURL2(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#preview2')
                        .attr('src', e.target.result)
                        .width(180)
                        .height(100);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        $('#submit-btn').click(function () {
            var obj = new Object();
            var num = $("#num").val();
            var title = $("#title").val();
            var text = tinymce.activeEditor.getContent();
            obj.title = title;
            obj.text = text;
            obj.num = num;
            $.ajax({
                type: "POST",
                url: "/Home/PostFormCarousel",
                data: obj,
                success: function (data) {
                    location.reload();
                }
            });
        });
    </script>

}
